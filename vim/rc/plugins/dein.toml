# a dark powered Vim/Neovim plugin manager
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'

# a great asynchronous execution library for Vim
[[plugins]]
repo = 'Shougo/vimproc'
build = 'make'

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_source = 'source ~/.vim/rc/plugins/configs/denite.rc.vim'
if = 'has("nvim")'

[[plugins]]
repo = 'fohte/tender.vim'

# light and configurable statusline/tabline
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_source = 'source ~/.vim/rc/plugins/configs/lightline.rc.vim'

[[plugins]]
repo = 'SirVer/ultisnips'
hook_source = '''
  let g:UltiSnipsSnippetsDir = '~/.vim/ultisnips'

  let g:UltiSnipsExpandTrigger = '<C-t>'
  let g:UltiSnipsJumpForwardTrigger = '<C-j>'
  let g:UltiSnipsJumpBackwardTrigger = '<C-k>'

  let g:UltiSnipsEditSplit = 'vertical'
'''

# auto close parentheses
[[plugins]]
repo = 'cohama/lexima.vim'
hook_source = '''
  let g:lexima_enable_basic_rules = 1
'''

# provide flawless, smooth and fast motions with minimal keystrokes
[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_source = 'source ~/.vim/rc/plugins/configs/easymotion.rc.vim'

# improve git commit buffer
[[plugins]]
repo = 'rhysd/committia.vim'
on_ft = 'gitcommit'
hook_add = '''
  let g:committia_hooks = {}
  function! g:committia_hooks.edit_open(info)
    " If no commit message, start with insert mode
    if a:info.vcs ==# 'git' && getline(1) ==# ''
      startinsert
    end
  endfunction
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'w0rp/ale'
hook_source = 'source ~/.vim/rc/plugins/configs/ale.rc.vim'

[[plugins]]
repo = 'ruby-formatter/rufo-vim'
hook_source = '''
  let g:rufo_auto_formatting = 0
'''

[[plugins]]
repo = 'AndrewRadev/switch.vim'
hook_source = '''
  let g:switch_mapping = '_'

  let g:switch_custom_definitions =
  \ [
  \   { '\v^( *- *)\[x\](.*)$': '\1[ ]\2' },
  \   { '\v^( *- *)\[ \](.*)$': '\1[x]\2' },
  \ ]
'''

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'terryma/vim-multiple-cursors'

[[plugins]]
repo = 'nixprime/cpsm'
build = 'PY3=ON sh install.sh'

[[plugins]]
repo = 'thinca/vim-themis'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  nnoremap <silent> <Leader>qr :<C-u>QuickRun<CR>
  nnoremap <silent> <Leader>ql :<C-u>QuickRun ruby.rspec.line<CR>
  nnoremap <expr> <silent> <C-c> quickrun#is_running() ? quickrun#sweep_sessions() : "\<C-c>"

  let g:quickrun_config = {
  \   '_': {
  \     'runner': 'vimproc',
  \     'runner/vimproc/updatetime': 100,
  \   },
  \   'ruby.rspec': {
  \     'command': 'rspec',
  \     'exec': '%c %s %o -fd --tty',
  \   },
  \   'ruby.rspec.line': {
  \     'command': 'rspec',
  \     'exec': '%c %s:%{line(".")} %o -fd --tty',
  \   },
  \ }
'''

[[plugins]]
repo = 'szw/vim-tags'
hook_add = '''
  augroup MyVimTagsSettings
    autocmd!
    autocmd BufWritePre,BufRead * TagsGenerate
  augroup END
'''

[[plugins]]
repo = 'https://github.com/brooth/far.vim'

[[plugins]]
repo = 'haya14busa/vim-edgemotion'

[[plugins]]
repo = 'itchyny/vim-cursorword'

[[plugins]]
repo = 'haya14busa/vim-asterisk'
hook_add = '''
  map * <Plug>(asterisk-z*)
  map # <Plug>(asterisk-z#)
  map g* <Plug>(asterisk-gz*)
  map g# <Plug>(asterisk-gz#)
  let g:asterisk#keeppos = 1
'''

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = 'source ~/.vim/rc/plugins/configs/lsp.rc.vim'
depends = 'async.vim'
