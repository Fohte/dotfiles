# keyword completion system by maintaining
# a cache of keywords in the current buffer
[[plugins]]
repo = 'Shougo/neocomplete.vim'
if = 'has("lua")'
on_event = 'InsertEnter'
hook_source = '''
  let g:neocomplete#enable_at_startup = 1
'''

# an asynchronous keyword completion system in the current buffer
#   Note: require Neovim with Python3 enabled
[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("nvim")'
on_event = 'InsertEnter'
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  source ~/.vim/rc/plugins/configs/deoplete.rc.vim
'''

# Go doc, fmt and import utilities
[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_source = '''
  let g:go_fmt_fail_silently = 1
  let g:go_fmt_command = 'goimports'
  let g:go_metalinter_enabled = 0
  nnoremap <silent> <CR> :GoDef<CR>
'''

[[plugins]]
repo = 'mattn/emmet-vim'
on_i = 1
hook_add = '''
  let g:user_emmet_leader_key = '<C-e>'
  let g:user_emmet_settings = {
  \ 'javascript': {
  \   'extends': 'jsx',
  \ },
  \}
'''

[[plugins]]
repo = 'dansomething/vim-eclim'
hook_source = '''
  let g:EclimCompletionMethod = 'omnifunc'
  nnoremap <silent> <buffer> <Leader>i :JavaSearchContext<CR>
  nnoremap <silent> <buffer> <CR> :JavaDocPreview<CR>
'''
on_ft = 'java'

[[plugins]]
repo = 'artur-shaik/vim-javacomplete2'
on_ft = 'java'
hook_add = '''
  augroup java-comp
    autocmd!
    autocmd FileType java setlocal omnifunc=javacomplete#Complete
  augroup END
'''

[[plugins]]
repo = 'racer-rust/vim-racer'
on_ft = 'rust'

[[plugins]]
repo = 'alexlafroscia/deoplete-flow'
rev = 'pass-filename-to-autocomplete'
on_ft = 'javascript'

[[plugins]]
repo = 'tpope/vim-rails'
on_ft = 'ruby'

[[plugins]]
repo = 'flowtype/vim-flow'
on_ft = 'javascript'
hook_source = '''
  let g:flow#enable = 0
  nnoremap <silent> <Leader>] :<C-u>FlowJumpToDef<CR>
'''
